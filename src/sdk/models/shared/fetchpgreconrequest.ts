/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class FetchPGReconRequestFilters extends SpeakeasyBase {
    /**
     * Specify the end date till when you want the settlement reconciliation details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "end_date" })
    endDate: string;

    /**
     * Specify the start date from when you want the settlement reconciliation details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "start_date" })
    startDate: string;
}

/**
 * To fetch the next set of settlements, pass the cursor received in the response to the next API call.
 *
 * @remarks
 *  To receive the data for the first time, pass the cursor as null.
 *  Limit would be number of settlements that you want to receive.
 */
export class FetchPGReconRequestPagination extends SpeakeasyBase {
    /**
     * Specifies from where the next set of settlement details should be fetched.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cursor" })
    cursor?: string;

    /**
     * Number of settlements you want to fetch in the next iteration. Maximum limit is 1000, default value is 10.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "limit" })
    limit: number;
}

export class FetchPGReconRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "filters" })
    @Type(() => FetchPGReconRequestFilters)
    filters: FetchPGReconRequestFilters;

    /**
     * To fetch the next set of settlements, pass the cursor received in the response to the next API call.
     *
     * @remarks
     *  To receive the data for the first time, pass the cursor as null.
     *  Limit would be number of settlements that you want to receive.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pagination" })
    @Type(() => FetchPGReconRequestPagination)
    pagination: FetchPGReconRequestPagination;
}
