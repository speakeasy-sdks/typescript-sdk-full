/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * One of CAPTURE or VOID
 */
export enum AuthorizationInPaymentsEntityAction {
    Capture = "CAPTURE",
    Void = "VOID",
}

/**
 * One of SUCCESS or PENDING
 */
export enum AuthorizationInPaymentsEntityStatus {
    Success = "SUCCESS",
    Pending = "PENDING",
}

/**
 * The authorization details are present for payments which go through the preauthorization workflow. Or else this parameter will be null.
 */
export class AuthorizationInPaymentsEntity extends SpeakeasyBase {
    /**
     * One of CAPTURE or VOID
     */
    @SpeakeasyMetadata()
    @Expose({ name: "action" })
    action?: AuthorizationInPaymentsEntityAction;

    /**
     * CAPTURE or VOID reference number based on action
     */
    @SpeakeasyMetadata()
    @Expose({ name: "action_reference" })
    actionReference?: string;

    /**
     * Time of action (CAPTURE or VOID)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "action_time" })
    actionTime?: string;

    /**
     * Approve by time as passed in the authorization request (only for UPI)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "approve_by" })
    approveBy?: string;

    /**
     * The captured amount for this authorization request
     */
    @SpeakeasyMetadata()
    @Expose({ name: "captured_amount" })
    capturedAmount?: number;

    /**
     * End time of this authorization hold (only for UPI)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "end_time" })
    endTime?: string;

    /**
     * Start time of this authorization hold (only for UPI)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "start_time" })
    startTime?: string;

    /**
     * One of SUCCESS or PENDING
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: AuthorizationInPaymentsEntityStatus;
}
