/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class FetchPGReconData extends SpeakeasyBase {
    /**
     * Amount that is adjusted from the settlement amount because of any credit/debit event such as refund, refund_reverse etc.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "adjustment" })
    adjustment?: number;

    /**
     * Other adjustment remarks.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "adjustment_remarks" })
    adjustmentRemarks?: string;

    /**
     * Net amount that is settled after considering the adjustments, settlement charge and tax.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amount_settled" })
    amountSettled?: number;

    /**
     * Cashfree Payments unique ID to identify a payment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cf_payment_id" })
    cfPaymentId?: number;

    /**
     * Unique ID to identify the settlement.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cf_settlement_id" })
    cfSettlementId?: number;

    /**
     * Specifies whether the dispute was closed in favor of the merchant or customer. /n Possible values - Merchant, Customer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "closed_in_favor_of" })
    closedInFavorOf?: string;

    /**
     * Customer email.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "customer_email" })
    customerEmail?: string;

    /**
     * Customer name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "customer_name" })
    customerName?: string;

    /**
     * Customer phone number.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "customer_phone" })
    customerPhone?: string;

    /**
     * Category of the dispute - Dispute code and the reason for dispute is shown.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dispute_category" })
    disputeCategory?: string;

    /**
     * Note regarding the dispute.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dispute_note" })
    disputeNote?: string;

    /**
     * Date and time when the dispute was resolved.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dispute_resolved_on" })
    disputeResolvedOn?: string;

    /**
     * Recon
     */
    @SpeakeasyMetadata()
    @Expose({ name: "entity" })
    entity?: string;

    /**
     * Amount of the event. Example, refund amount, dispute amount, payment amount, etc.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_amount" })
    eventAmount?: number;

    /**
     * Curreny type - INR.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_currency" })
    eventCurrency?: string;

    /**
     * Unique ID associated with the event.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_id" })
    eventId?: string;

    /**
     * Amount that is part of the settlement corresponding to the event.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_settlement_amount" })
    eventSettlementAmount?: number;

    /**
     * Status of the event. Example - SUCCESS, FAILED, PENDING, CANCELLED.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_status" })
    eventStatus?: string;

    /**
     * Time associated with the event. Example, transaction time, dispute initiation time
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_time" })
    eventTime?: string;

    /**
     * The event type can be SETTLEMENT, PAYMENT, REFUND, REFUND_REVERSAL, DISPUTE, DISPUTE_REVERSAL, CHARGEBACK, CHARGEBACK_REVERSAL, OTHER_ADJUSTMENT.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "event_type" })
    eventType?: string;

    /**
     * The amount which was passed at the order creation time.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "order_amount" })
    orderAmount?: number;

    /**
     * Unique order ID. Alphanumeric and only '-' and '_' allowed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "order_id" })
    orderId?: string;

    /**
     * Payment amount captured.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_amount" })
    paymentAmount?: number;

    /**
     * The start time of the time range of the payments considered for the settlement.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_from" })
    paymentFrom?: string;

    /**
     * Service charge applicable for the payment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_service_charge" })
    paymentServiceCharge?: number;

    /**
     * Service tax applicable on the payment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_service_tax" })
    paymentServiceTax?: number;

    /**
     * The end time of time range of the payments considered for the settlement.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_till" })
    paymentTill?: string;

    /**
     * Date and time when the payment was initiated.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_time" })
    paymentTime?: string;

    /**
     * Unique transaction reference number of the payment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_utr" })
    paymentUtr?: string;

    /**
     * Reason for settlement failure.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reason" })
    reason?: string;

    /**
     * The bank reference number for the refund.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "refund_arn" })
    refundArn?: string;

    /**
     * An unique ID to associate the refund with.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "refund_id" })
    refundId?: string;

    /**
     * A refund note for your reference.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "refund_note" })
    refundNote?: string;

    /**
     * Date and time when the refund was processed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "refund_processed_at" })
    refundProcessedAt?: string;

    /**
     * Remarks on the settlement.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remarks" })
    remarks?: string;

    /**
     * Indicates if it is CREDIT/DEBIT sale.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "sale_type" })
    saleType?: string;

    /**
     * Service charge applicable on the settlement amount.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "service_charge" })
    serviceCharge?: number;

    /**
     * Service tax applicable on the settlement amount.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "service_tax" })
    serviceTax?: number;

    /**
     * Settlement charges applicable on the settlement.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "settlement_charge" })
    settlementCharge?: number;

    /**
     * Date and time when the settlement was processed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "settlement_date" })
    settlementDate?: string;

    /**
     * Date and time when the settlement was initiated.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "settlement_initiated_on" })
    settlementInitiatedOn?: string;

    /**
     * Settlement tax applicable on the settlement.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "settlement_tax" })
    settlementTax?: number;

    /**
     * Type of settlement. Possible values - Standard, Instant, On demand.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "settlement_type" })
    settlementType?: string;

    /**
     * Unique transaction reference number of the settlement.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "settlement_utr" })
    settlementUtr?: string;

    /**
     * Service charge that is applicable for splitting the payment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "split_service_charge" })
    splitServiceCharge?: number;

    /**
     * Service tax applicable for splitting the amount to vendors.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "split_service_tax" })
    splitServiceTax?: number;

    /**
     * Vendor commission applicable for this transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "vendor_commission" })
    vendorCommission?: number;
}

/**
 * OK
 */
export class FetchPGRecon extends SpeakeasyBase {
    /**
     * Specifies from where the next set of settlement details should be fetched.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cursor" })
    cursor?: string;

    @SpeakeasyMetadata({ elemType: FetchPGReconData })
    @Expose({ name: "data" })
    @Type(() => FetchPGReconData)
    data?: FetchPGReconData[];

    /**
     * Number of settlements you want to fetch in the next iteration.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "limit" })
    limit?: number;
}
