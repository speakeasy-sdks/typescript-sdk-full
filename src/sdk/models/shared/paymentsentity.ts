/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorizationInPaymentsEntity } from "./authorizationinpaymentsentity";
import { ErrorDetailsInPaymentsEntity } from "./errordetailsinpaymentsentity";
import { PaymentMethodInPaymentsEntity } from "./paymentmethodinpaymentsentity";
import { Expose, Type } from "class-transformer";

/**
 * The transaction status can be one of  ["SUCCESS", "NOT_ATTEMPTED", "FAILED", "USER_DROPPED", "VOID", "CANCELLED", "PENDING"]
 */
export enum PaymentsEntityPaymentStatus {
    Success = "SUCCESS",
    NotAttempted = "NOT_ATTEMPTED",
    Failed = "FAILED",
    UserDropped = "USER_DROPPED",
    Void = "VOID",
    Cancelled = "CANCELLED",
    Pending = "PENDING",
}

/**
 * OK
 */
export class PaymentsEntity extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "auth_id" })
    authId?: string;

    /**
     * The authorization details are present for payments which go through the preauthorization workflow. Or else this parameter will be null.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "authorization" })
    @Type(() => AuthorizationInPaymentsEntity)
    authorization?: AuthorizationInPaymentsEntity;

    @SpeakeasyMetadata()
    @Expose({ name: "bank_reference" })
    bankReference?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "cf_payment_id" })
    cfPaymentId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "entity" })
    entity?: string;

    /**
     * The error details are present only for failed payments
     */
    @SpeakeasyMetadata()
    @Expose({ name: "error_details" })
    @Type(() => ErrorDetailsInPaymentsEntity)
    errorDetails?: ErrorDetailsInPaymentsEntity;

    @SpeakeasyMetadata()
    @Expose({ name: "is_captured" })
    isCaptured?: boolean;

    /**
     * Order amount can be different from payment amount if you collect service fee from the customer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "order_amount" })
    orderAmount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "order_id" })
    orderId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payment_amount" })
    paymentAmount?: number;

    /**
     * This is the time when the payment reaches its terminal state
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_completion_time" })
    paymentCompletionTime?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payment_currency" })
    paymentCurrency?: string;

    /**
     * Type of payment group. One of ['upi', 'card', 'app', 'netbanking', 'paylater', 'cardless_emi']
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_group" })
    paymentGroup?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payment_message" })
    paymentMessage?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payment_method" })
    @Type(() => PaymentMethodInPaymentsEntity)
    paymentMethod?: PaymentMethodInPaymentsEntity;

    /**
     * The transaction status can be one of  ["SUCCESS", "NOT_ATTEMPTED", "FAILED", "USER_DROPPED", "VOID", "CANCELLED", "PENDING"]
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_status" })
    paymentStatus?: PaymentsEntityPaymentStatus;

    /**
     * This is the time when the payment was initiated
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment_time" })
    paymentTime?: string;
}
