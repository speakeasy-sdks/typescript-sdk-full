/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * One of [`flexmoney`, `zestmoney`, `hdfc`, `icici`, `cashe`, `idfc`, `kotak`]
 */
export enum CardlessEMIProvider {
    Flexmoney = "flexmoney",
    Zestmoney = "zestmoney",
    Hdfc = "hdfc",
    Icici = "icici",
    Cashe = "cashe",
    Idfc = "idfc",
    Kotak = "kotak",
}

export class CardlessEMI extends SpeakeasyBase {
    /**
     * The channel for cardless EMI is always `link`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "channel" })
    channel?: string;

    /**
     * EMI tenure for the selected provider. This is mandatory when provider is one of [`hdfc`, `icici`, `cashe`, `idfc`, `kotak`]
     */
    @SpeakeasyMetadata()
    @Expose({ name: "emi_tenure" })
    emiTenure?: number;

    /**
     * Customers phone number for this payment instrument. If the customer is not eligible you will receive a 400 error with type as 'invalid_request_error' and code as 'invalid_request_error'
     */
    @SpeakeasyMetadata()
    @Expose({ name: "phone" })
    phone?: string;

    /**
     * One of [`flexmoney`, `zestmoney`, `hdfc`, `icici`, `cashe`, `idfc`, `kotak`]
     */
    @SpeakeasyMetadata()
    @Expose({ name: "provider" })
    provider?: CardlessEMIProvider;
}
